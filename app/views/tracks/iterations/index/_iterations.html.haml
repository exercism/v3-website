.lg-container.container
  %section.iterations
    - iterations.each.with_index do |iteration, idx|
      %details.iteration.c-details{ open: idx.zero? }
        %summary.header
          = ReactComponents::Track::IterationSummary.new(iteration)
          .opener
            .--closed-icon= graphical_icon 'chevron-right'
            .--open-icon= graphical_icon 'chevron-down'
        .content
          .files
            %pre
              %code
                / TODO: ðŸ¤®
                = iteration.submission.files.first.content
          .information
            - if iteration.status.to_sym == :testing || iteration.status.to_sym == :analyzing
              .automated-feedback-pending
                = graphical_icon :spinner
                %h3 Weâ€™re analysing your code for suggestions
                %p This usually takes 10-30 seconds.

            - elsif iteration.status.to_sym == :no_automated_feedback
              .automated-feedback-absent
                = graphical_icon "graphic-mentoring-header"
                %h3 No auto suggestions? Try human mentoring.
                %p Get real 1-to-1 human mentoring on the Leap exercise and start writing better C#.
                = link_to "Get Mentoring", track_exercise_mentoring_index_path(iteration.track, iteration.exercise), class: 'btn-secondary'

            - else
              - if iteration.representer_feedback
                .representer-feedback
                  - feedback = iteration.representer_feedback
                  .feedback-header
                    = rounded_bg_img(feedback[:author][:avatar_url], "Erik SchierBOOM's uploaded avatar")
                    .info
                      %strong= feedback[:author][:name]
                      gave this feedback on a solution very similar to yours:

                  .comment
                    .c-textual-content.--small= raw feedback[:html]

              - if iteration.analyzer_feedback
                - feedback = iteration.analyzer_feedback
                .analyzer-feedback
                  .feedback-header
                    = track_icon iteration.track
                    .info
                      Our
                      %strong #{iteration.track.title} Analyzer
                      has some comments on your solution which may be useful for you:

                  - if feedback[:summary].present?
                    .summary= feedback[:summary]

                  - feedback[:comments].each do |comment|
                    .comment
                      - if comment[:type] == :essential
                        .tag.essential Essential
                      - elsif comment[:type] == :actionable
                        .tag.recommended Recommended
                      .c-textual-content.--small= raw comment[:html]

                  .explanation
                    Exercism provides automated feedback using a number of intelligent tools and systems developed by our community.
                    = link_to "#" do
                      Learn more
                      = icon "external-link", "Opens in a new tab"
