#page-concept-show
  = ViewComponents::Track::ConceptNav.new(@track)

  %header.concept-header
    .lg-container.container
      .icon
      .info
        %h1
          = @concept.name
          %small in
          = track_icon(@track)
        .exercises
          = graphical_icon(:exercises)
          5 exercises

  %section.lg-container.tw-flex
    %div
      .about
        %h2 About #{@concept.name}
        %p C# structs are closely related to classes. They have state and behavior. They have constructors that take arguments, instances can be assigned, tested for equality and stored in collections.

      .links
        %h3 Learn More
        %ul
          %li
            = link_to "#" do
              = bg_img("https://c.s-microsoft.com/favicon.ico?v2", "Favicon of linked website")
              Structs in C#
              = icon(:external_link, "(external link)")

          %li
            = link_to "#" do
              = bg_img("https://c.s-microsoft.com/favicon.ico?v2", "Favicon of linked website")
              Using Methods in C#
              = icon(:external_link, "(external link)")

    .tw-w-1-3.tw-flex-shrink-0.tw-ml-spacedColumns

      - if @concept_exercises.present?
        .learn
          %h3
            = graphical_icon(:concepts)
            Learn #{@concept.name}

          - @concept_exercises.each do |concept_exercise|
            = render "tracks/concepts/show/concept_exercise", track: @track, exercise: concept_exercise

      - if @practice_exercises.present?
        .practice
          Practice this:
          - @practice_exercises.each do |practice_exercise|
            = render "tracks/concepts/show/practice_exercise", track: @track, exercise: practice_exercise
