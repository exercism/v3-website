#page-exercise-show
  = render ViewComponents::Track::ExerciseNav.new(@track, @exercise, @solution, :about)

  %header.exercise-header
    .lg-container.container
      = exercise_icon @exercise
      .info
        %h1
          = @exercise.title
          - if @solution&.completed?
            = icon 'completed-check-circle', "Exercise is completed"
        .difficulty Easy

      / TODO: Cache this
      .makers
        .faces
          - @exercise.authors.each do |author|
            .author{ "data-tooltip-type": "user", "data-endpoint": tooltip_profile_path(author.handle), "data-handle": author.handle }
              = rounded_bg_img(author.avatar_url, "#{author.name} uploaded avatar")
        .stats
          .authors= pluralize @exercise.authors.size, "author"
          - if @exercise.contributors.present?
            .contributors= pluralize @exercise.contributors.size, "contributor"

  .lg-container.tw-flex
    .tw-w-arbitary.tw-flex-grow
      - if @solution&.completed?
        = render "tracks/exercises/show/completed_sections", user_track: @user_track, track: @track, exercise: @exercise, iteration: @iteration

      - elsif @iteration

        %section.latest-iteration
          %h2 You’ve submitted an iteration.
          %p We'll automatically analyze your solution and suggest potential improvements.

          = link_to Exercism::Routes.track_exercise_iteration_path(@track, @exercise, @iteration), class: "iteration" do
            = ReactComponents::Track::IterationSummary.new(@iteration)
            = graphical_icon 'chevron-right', css_class: 'action-icon'

          = render ViewComponents::ProminentLink.new("See all of your iterations", track_concepts_path(@track))

          .next-steps
            .header-bar
              %h3 What can I do from here?
              / TODO: Implement
              %button.btn-small
                = graphical_icon :close
                Dismiss

            .steps
              = link_to track_exercise_iterations_path(@track, @exercise), class: 'action' do
                = graphical_icon "graphic-bookworm"
                Review any automated feedback

              = link_to "#", class: 'action' do
                = graphical_icon "graphic-phone-chat"
                Learn from alternative approaches

              = link_to track_exercise_mentoring_index_path(@track, @exercise), class: 'action' do
                = graphical_icon "graphic-hacker-boy"
                Get free mentoring on your solution

              = link_to "#", class: 'action' do
                = graphical_icon "graphic-floating-cash"
                Mark the exercise as complete

      - if @exercise.concept_exercise? && !@solution&.completed?
        %section.taught-concepts
          %h3
            Completing #{@track.title} teaches
            %strong= pluralize @exercise.taught_concepts.size, 'concept'
          .concepts
            - @exercise.taught_concepts.each.each do |concept|
              = link_to track_concept_path(@track, concept), class: 'concept' do
                = render ViewComponents::ConceptIcon.new(concept, :small)
                = concept.name

      %section.instructions.c-textual-content.--large
        %h2 Instructions
        - instructions = @solution ? @solution.instructions : @exercise.instructions
        = raw Markdown::Parse.(instructions)

    .tw-w-1-3.tw-flex-shrink-0.tw-ml-32
      - if @solution
        - if @solution.completed?
          = render "tracks/exercises/show/action_box_completed"
        - else
          = render "tracks/exercises/show/action_box_continue", track: @track, exercise: @exercise
      - elsif @user_track
        - if @user_track.exercise_available?(@exercise)
          = render "tracks/exercises/show/action_box_start", exercise: @exercise

        - else
          .action-box
            %h3
              = icon :lock, "This exercise is locked"
              Unlock #{@exercise.title}
            %p
              This exercise is currently unavailable for you to start. Complete all of these exercises to unlock
              %strong #{@exercise.title}.

            .prereqs
              - @exercise.prerequisite_exercises.each do |prereq|
                = render ViewComponents::Widgets::Exercise.new(prereq, @user_track, size: :small)

      - else
        / TODO: External state
        External State
