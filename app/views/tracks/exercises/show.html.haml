#page-exercise-show
  = render ViewComponents::Track::ExerciseNav.new(@track, @exercise, @solution, :about)

  %header.exercise-header
    .lg-container.container
      = exercise_icon @exercise, css_class: "exercise-icon"
      .info
        %h1
          = @exercise.title
          - if @solution&.completed?
            = icon 'completed-check-circle', "Exercise is completed"
        .difficulty Easy

      .makers
        .faces
          .author{ "data-tooltip-type": "user", "data-endpoint": tooltip_profile_path('iHiD'), "data-handle": "erikschierboom" }
            = rounded_bg_img("https://avatars2.githubusercontent.com/u/8953691?s=460&u=593aaf70d7708aa3a98eb0b49a212a45263bc065&v=4", "Erik SchierBOOM's uploaded avatar")
          .author{ "data-tooltip-type": "user", "data-endpoint": tooltip_profile_path('erikschierboom'), "data-handle": "erikschierboom" }
            = rounded_bg_img("https://avatars2.githubusercontent.com/u/1964376?s=400&u=591370994dd91ec3d5f2a345252a653406858be0&v=4", "Erik SchierBOOM's uploaded avatar")
          .author{ "data-tooltip-type": "user", "data-endpoint": tooltip_profile_path('kntsoriano'), "data-handle": "kntsoriano" }
            = rounded_bg_img("https://avatars2.githubusercontent.com/u/7852553?s=400&u=6227e3aeff0e649cce5483fca11deb3cc6481319&v=4", "Erik SchierBOOM's uploaded avatar")
        .stats
          .authors 2 authors
          .contributors 4 contributors

  .lg-container.tw-flex
    .tw-w-arbitary.tw-flex-grow
      - if @solution&.completed?
        = render "tracks/exercises/show/completed_sections", user_track: @user_track, track: @track, exercise: @exercise, iteration: @iteration

      - elsif @iteration

        %section.latest-iteration
          %h2 You’ve submitted an iteration.
          %p We'll automatically analyze your solution and suggest potential improvements.

          = link_to Exercism::Routes.track_exercise_iteration_path(@track, @exercise, @iteration), class: "iteration" do
            = ReactComponents::Track::IterationSummary.new(@iteration)
            = graphical_icon 'chevron-right', css_class: 'action-icon'

          = render ViewComponents::ProminentLink.new("See all of your iterations", track_concepts_path(@track))


      - if @exercise.concept_exercise? && !@solution&.completed?
        %section.taught-concepts
          %h3
            Completing #{@track.title} teaches
            %strong= pluralize @exercise.taught_concepts.size, 'concept'
          .concepts
            - @exercise.taught_concepts.each.each do |concept|
              = link_to track_concept_path(@track, concept), class: 'concept' do
                = render ViewComponents::ConceptIcon.new(concept, :small)
                = concept.name

      %section.instructions.c-textual-content
        %h2 Instructions
        - instructions = @solution ? @solution.instructions : @exercise.instructions
        = raw Markdown::Parse.(instructions)

    .tw-w-1-3.tw-flex-shrink-0.tw-ml-32
      - if @solution
        - if @solution.completed?
          = render "tracks/exercises/show/action_box_completed"
        - else
          = render "tracks/exercises/show/action_box_continue", track: @track, exercise: @exercise
      - elsif @user_track
        - if @user_track.exercise_available?(@exercise)
          = render "tracks/exercises/show/action_box_start", exercise: @exercise

        - else
          .action-box
            %h3
              = icon :lock, "This exercise is locked"
              Unlock #{@exercise.title}
            %p
              This exercise is currently unavailable for you to start. Complete all of these exercises to unlock
              %strong #{@exercise.title}.

            .prereqs
              - @exercise.prerequisite_exercises.each do |prereq|
                = render ViewComponents::Widgets::Exercise.new(prereq, @user_track, size: :small)

      - else
        / TODO: External state
        External State
